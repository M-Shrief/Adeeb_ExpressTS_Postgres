# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    container_name: adeeb_server
    build:
      context: .
    restart: unless-stopped
    secrets:
      - jwt-private
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: adeeb_db
      DB_PORT: 5432
      DB_NAME: adeeb_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS: redis://redis:6379
      JWT_PRIVATE: /run/secrets/jwt-private
      CA_CERTIFICATE: 
      SECRET_KEY:
      LOG_DIR:
      LOG_FORMAT:
      CORS_ORIGIN: http://localhost:5173,
      SENTRY_DNS: ''
    ports:
      - 3000:3000
    depends_on:
      - db
      - redis

  db:
    container_name: adeeb_db
    image: postgres:15.1-alpine
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: adeeb_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432

  redis:
    # container_name: adeeb_redis
    restart: unless-stopped
    image: redis:7.2.3-alpine 
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - '6379:6379'

volumes:
  db-data:
secrets:
  jwt-private:
    file: jwtRSA256-private.pem